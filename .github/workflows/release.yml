name: Upload Python Package

on:
  push:
    tags:
      - v*.**
    branches:
      - develop
  pull_request:
    branches:
      - develop
      - legacy/.*
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest-8, macos-latest]
        python: [3.12, 3.13 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
      - name: Setup backend
        uses: ./.github/actions/setup-backend
        with:
          python-version: ${{ matrix.python }}
      - name: Get history and tags for SCM versioning to work
        run: |
          git branch
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Build release distributions
        run: |
          uv build --wheel
          uv build --package codegen-git --wheel
          uv build --package codegen-utils --wheel
          cd graph-sitter-types
          uv build --package graph-sitter-types --wheel --sdist
        env:
          HATCH_BUILD_HOOKS_ENABLE: true
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest-8
    permissions:
      contents: write
    environment: release
    steps:
      - uses: actions/checkout@v4
      - name: Setup backend
        uses: ./.github/actions/setup-backend
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
          pattern: wheels-*
      - name: Release to AWS codeartifact
        run: |
          export UV_PUBLISH_PASSWORD="$(aws codeartifact get-authorization-token --domain codegen --domain-owner 922078275900 --region us-east-1 --query authorizationToken --output text)"
          export UV_PUBLISH_USERNAME=aws
          uv publish
      # - name: Release to pypi
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     uv publish --trusted-publishing always --publish-url https://upload.pypi.org/legacy/ --keyring-provider disabled
      - name: Make github release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          fail_on_unmatched_files: true
          generate_release_notes: true
