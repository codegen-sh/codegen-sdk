name: Build & Release

on:
  push:
    tags:
      - v*
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write # grants permission to create a release on github
    steps:
      - uses: actions/checkout@v4
        with:
          ref: v0.5.24

      - name: Setup backend
        uses: ./.github/actions/setup-environment

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
          pattern: wheels-*

      # - name: Release PyPI
      #   run: |
      #     export UV_PUBLISH_PASSWORD="${{ secrets.PYPI_TOKEN }}"
      #     export UV_PUBLISH_USERNAME="__token__"
      #     uv publish --publish-url https://upload.pypi.org/legacy/

      - name: Make github release
        id: github-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v0.5.24
          files: dist/*
          fail_on_unmatched_files: true
          generate_release_notes: true

      - uses: slackapi/slack-github-action@v2.0.0
        if: always()
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            username: ${{ job.status == 'success' && format('Released <{0}|{1}>', steps.github-release.outputs.url, github.ref_name) || format('Failed to release {0}', github.ref_name) }}
            channel: "#christine-test"
            icon_emoji: "${{ job.status == 'success' && ':white_check_mark:' || ':x:' }}"
            text: |
              Actor: `${{ github.triggering_actor }}`
              Author: `${{ github.event.head_commit.author.username }}`
              ${{ format('Commit: <{0}/{1}/commit/{2}|{1}@{2}>', github.server_url, github.repository, github.sha) || ''}}
              ${{ format('Description: `{0}`', github.event.head_commit.message) || ''}}
              View <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|GHA logs>
