name: Build & Release

on:
  push:
    tags:
      - v*
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-24.04-arm,
          macos-latest,
        ]

    steps:
      - name: Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}

      - name: Setup environment
        uses: ./.github/actions/setup-environment

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Fetch tags
        run: |
          git branch
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      # TODO: add cbuildwheel cache
      - name: Build wheel
        uses: pypa/cibuildwheel@v2.22.0
        env:
          HATCH_BUILD_HOOKS_ENABLE: true
          CIBW_SKIP: '{*i686*,*musllinux*}'

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v4

      - name: Setup backend
        uses: ./.github/actions/setup-environment

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
          pattern: wheels-*

      - name: Release PyPI
        run: |
          export UV_PUBLISH_PASSWORD="${{ secrets.PYPI_TOKEN }}"
          export UV_PUBLISH_USERNAME="__token__"
          uv publish --publish-url https://upload.pypi.org/legacy/

      - name: Make github release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          fail_on_unmatched_files: true
          generate_release_notes: true
