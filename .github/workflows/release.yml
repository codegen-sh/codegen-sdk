name: Build & Release

on:
  push:
    tags:
      - v*
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: read

jobs:
  setup:
    if: github.ref_name == 'develop'
    runs-on: ubuntu-latest
    outputs:
      semantic-release-version: ${{ steps.semantic.outputs.release-version }}
      semantic-release-notes: ${{ steps.semantic.outputs.release-notes }}
    steps:
      - name: Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for required checks
        uses: poseidon/wait-for-status-checks@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          match_pattern: "(unit-tests|integration-tests)"

      - name: Github semantic release
        uses: codfish/semantic-release-action@v3
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build 3.${{ matrix.python }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-24.04-arm, # https://github.com/actions/partner-runner-images/issues/37
          macos-latest,
          macos-14-large
        ]
        python: [
          12,
          13,
        ]

    steps:
      - name: Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.setup.outputs.semantic-release-version || github.event.pull_request.head.ref || github.ref }}

      - name: Install UV
        uses: astral-sh/setup-uv@v5.2
        id: setup-uv
        with:
          enable-cache: false
          prune-cache: false
          python-version: 3.${{ matrix.python }}
          version: '0.5.24'
          cache-suffix: 3.${{ matrix.python }}

      - name: Fetch tags
        run: |
          git branch
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      # TODO: add cbuildwheel cache
      - name: Build wheel
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "*cp3${{ matrix.python }}*"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-3.${{ matrix.python }}
          path: ./wheelhouse/*.whl

  auto-release:
    if: github.ref_name == 'develop'
    environment: release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: read # to wait for required checks
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for required checks
        uses: poseidon/wait-for-status-checks@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          match_pattern: "(unit-tests|integration-tests)"

      - name: Github semantic release
        uses: codfish/semantic-release-action@v3
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release PyPI
        if: ${{ steps.semantic.outputs.new-release-published == 'true' }}
        uses: ./.github/actions/release-pypi
        with:
          pypi-token: ${{ secrets.PYPI_TOKEN }}

      - name: Slack notification
        if: ${{ steps.semantic.outputs.new-release-published == 'true' }}
        uses: ./.github/actions/release-slack-bot
        with:
          release-tag: ${{ steps.semantic.outputs.release-version }}
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}

  manual-release:
    if: startsWith(github.ref, 'refs/tags/')
    environment: release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # grants permission to create a release on github
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-environment

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
          pattern: wheels-*

      - name: Release PyPI
        uses: ./.github/actions/release-pypi
        with:
          pypi-token: ${{ secrets.PYPI_TOKEN }}

      - name: Github release
        id: github-release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          fail_on_unmatched_files: true
          generate_release_notes: true

      - name: Slack notification
        if: always()
        uses: ./.github/actions/release-slack-bot
        with:
          release-tag: ${{ github.ref_name }}
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}
