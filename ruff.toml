line-length = 200
exclude = [
  "src/codegen/shared/compilation/function_imports.py",
  'docs/**',
  "src/codegen/sdk/__init__.py",
]
unsafe-fixes = true
[lint]
select = ["F", "E", "W", "I", "UP", "D", "RUF", "DTZ", "TC", "EM"]
ignore = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D203",
  "D205",
  "D213",
  "D400",
  "D401",
  "D402",
  "D404",
  "D415",
  "D417",
  "E712",   # https://github.com/astral-sh/ruff/issues/4560
  "F841",
  "F842",
  "RUF012",
  "RUF007",
]
exclude = [
  "*.ipynb",
] # disable just linting for notebooks (allow for formatting)
[lint.pydocstyle]
convention = "google"
[lint.pyflakes]
extend-generics = [
  "codegen.sdk.codebase.flagging.enums.MessageType",
  "codegen.sdk.codebase.flagging.enums.FlagKwargs",
  "codegen.sdk.codebase.span.Span",
  "codegen.sdk.core.assignment.Assignment",
  "codegen.sdk.core.class_definition.Class",
  "codegen.sdk.core.codebase.Codebase",
  "codegen.sdk.core.dataclasses.usage.Usage",
  "codegen.sdk.core.dataclasses.usage.UsageType",
  "codegen.sdk.core.dataclasses.usage.UsageKind",
  "codegen.sdk.core.detached_symbols.argument.Argument",
  "codegen.sdk.core.detached_symbols.code_block.CodeBlock",
  "codegen.sdk.core.detached_symbols.decorator.Decorator",
  "codegen.sdk.core.detached_symbols.function_call.FunctionCall",
  "codegen.sdk.core.detached_symbols.parameter.Parameter",
  "codegen.sdk.core.directory.Directory",
  "codegen.sdk.core.export.Export",
  "codegen.sdk.core.expressions.await_expression.AwaitExpression",
  "codegen.sdk.core.expressions.binary_expression.BinaryExpression",
  "codegen.sdk.core.expressions.boolean.Boolean",
  "codegen.sdk.core.expressions.chained_attribute.ChainedAttribute",
  "codegen.sdk.core.expressions.comparison_expression.ComparisonExpression",
  "codegen.sdk.core.expressions.expression.Expression",
  "codegen.sdk.core.expressions.generic_type.GenericType",
  "codegen.sdk.core.expressions.multi_expression.MultiExpression",
  "codegen.sdk.core.expressions.name.Name",
  "codegen.sdk.core.expressions.named_type.NamedType",
  "codegen.sdk.core.expressions.none_type.NoneType",
  "codegen.sdk.core.expressions.number.Number",
  "codegen.sdk.core.expressions.parenthesized_expression.ParenthesizedExpression",
  "codegen.sdk.core.expressions.placeholder_type.PlaceholderType",
  "codegen.sdk.core.expressions.string.String",
  "codegen.sdk.core.expressions.subscript_expression.SubscriptExpression",
  "codegen.sdk.core.expressions.ternary_expression.TernaryExpression",
  "codegen.sdk.core.expressions.tuple_type.TupleType",
  "codegen.sdk.core.expressions.type.Type",
  "codegen.sdk.core.expressions.unary_expression.UnaryExpression",
  "codegen.sdk.core.expressions.union_type.UnionType",
  "codegen.sdk.core.expressions.unpack.Unpack",
  "codegen.sdk.core.expressions.value.Value",
  "codegen.sdk.core.external_module.ExternalModule",
  "codegen.sdk.core.file.File",
  "codegen.sdk.core.file.SourceFile",
  "codegen.sdk.core.function.Function",
  "codegen.sdk.core.import_resolution.Import",
  "codegen.sdk.core.interfaces.callable.Callable",
  "codegen.sdk.core.interfaces.editable.Editable",
  "codegen.sdk.core.interfaces.exportable.Exportable",
  "codegen.sdk.core.interfaces.has_block.HasBlock",
  "codegen.sdk.core.interfaces.has_name.HasName",
  "codegen.sdk.core.interfaces.has_value.HasValue",
  "codegen.sdk.core.interfaces.importable.Importable",
  "codegen.sdk.core.interfaces.typeable.Typeable",
  "codegen.sdk.core.interfaces.unwrappable.Unwrappable",
  "codegen.sdk.core.interfaces.usable.Usable",
  "codegen.sdk.core.placeholder.placeholder.Placeholder",
  "codegen.sdk.core.placeholder.placeholder_stub.StubPlaceholder",
  "codegen.sdk.core.placeholder.placeholder_type.TypePlaceholder",
  "codegen.sdk.core.statements.assignment_statement.AssignmentStatement",
  "codegen.sdk.core.statements.attribute.Attribute",
  "codegen.sdk.core.statements.block_statement.BlockStatement",
  "codegen.sdk.core.statements.catch_statement.CatchStatement",
  "codegen.sdk.core.statements.comment.Comment",
  "codegen.sdk.core.statements.export_statement.ExportStatement",
  "codegen.sdk.core.statements.expression_statement.ExpressionStatement",
  "codegen.sdk.core.statements.for_loop_statement.ForLoopStatement",
  "codegen.sdk.core.statements.if_block_statement.IfBlockStatement",
  "codegen.sdk.core.statements.import_statement.ImportStatement",
  "codegen.sdk.core.statements.raise_statement.RaiseStatement",
  "codegen.sdk.core.statements.return_statement.ReturnStatement",
  "codegen.sdk.core.statements.statement.StatementType",
  "codegen.sdk.core.statements.statement.Statement",
  "codegen.sdk.core.statements.switch_case.SwitchCase",
  "codegen.sdk.core.statements.switch_statement.SwitchStatement",
  "codegen.sdk.core.statements.symbol_statement.SymbolStatement",
  "codegen.sdk.core.statements.try_catch_statement.TryCatchStatement",
  "codegen.sdk.core.statements.while_statement.WhileStatement",
  "codegen.sdk.core.symbol.Symbol",
  "codegen.sdk.core.symbol_group.SymbolGroup",
  "codegen.sdk.core.symbol_groups.comment_group.CommentGroup",
  "codegen.sdk.core.symbol_groups.dict.Pair",
  "codegen.sdk.core.symbol_groups.dict.Dict",
  "codegen.sdk.core.symbol_groups.expression_group.ExpressionGroup",
  "codegen.sdk.core.symbol_groups.list.List",
  "codegen.sdk.core.symbol_groups.multi_line_collection.MultiLineCollection",
  "codegen.sdk.core.symbol_groups.tuple.Tuple",
  "codegen.sdk.core.type_alias.TypeAlias",
  "codegen.sdk.python.statements.if_block_statement.PyIfBlockStatement",
  "codegen.sdk.python.statements.with_statement.WithStatement",
  "codegen.sdk.typescript.statements.block_statement.TSBlockStatement",
  "codegen.sdk.typescript.statements.catch_statement.TSCatchStatement",
  "codegen.sdk.typescript.statements.if_block_statement.TSIfBlockStatement",
  "codegen.sdk.typescript.symbol_groups.dict.TSDict",
  "codegen.sdk.core.codebase.PyCodebaseType",
  "codegen.sdk.core.codebase.TSCodebaseType",
  "codegen.sdk.core.codebase.CodebaseType",
  "codegen.sdk.python.assignment.PyAssignment",
  "codegen.sdk.python.class_definition.PyClass",
  "codegen.sdk.python.detached_symbols.code_block.PyCodeBlock",
  "codegen.sdk.python.detached_symbols.decorator.PyDecorator",
  "codegen.sdk.python.detached_symbols.parameter.PyParameter",
  "codegen.sdk.python.expressions.chained_attribute.PyChainedAttribute",
  "codegen.sdk.python.expressions.conditional_expression.PyConditionalExpression",
  "codegen.sdk.python.expressions.generic_type.PyGenericType",
  "codegen.sdk.python.expressions.named_type.PyNamedType",
  "codegen.sdk.python.expressions.string.PyString",
  "codegen.sdk.python.expressions.union_type.PyUnionType",
  "codegen.sdk.python.file.PyFile",
  "codegen.sdk.python.function.PyFunction",
  "codegen.sdk.python.import_resolution.PyImport",
  "codegen.sdk.python.interfaces.has_block.PyHasBlock",
  "codegen.sdk.python.placeholder.placeholder_return_type.PyReturnTypePlaceholder",
  "codegen.sdk.python.statements.assignment_statement.PyAssignmentStatement",
  "codegen.sdk.python.statements.attribute.PyAttribute",
  "codegen.sdk.python.statements.block_statement.PyBlockStatement",
  "codegen.sdk.python.statements.break_statement.PyBreakStatement",
  "codegen.sdk.python.statements.catch_statement.PyCatchStatement",
  "codegen.sdk.python.statements.comment.PyCommentType",
  "codegen.sdk.python.statements.comment.PyComment",
  "codegen.sdk.python.statements.for_loop_statement.PyForLoopStatement",
  "codegen.sdk.python.statements.import_statement.PyImportStatement",
  "codegen.sdk.python.statements.match_case.PyMatchCase",
  "codegen.sdk.python.statements.match_statement.PyMatchStatement",
  "codegen.sdk.python.statements.pass_statement.PyPassStatement",
  "codegen.sdk.python.statements.try_catch_statement.PyTryCatchStatement",
  "codegen.sdk.python.statements.while_statement.PyWhileStatement",
  "codegen.sdk.python.symbol.PySymbol",
  "codegen.sdk.python.symbol_groups.comment_group.PyCommentGroup",
  "codegen.sdk.typescript.assignment.TSAssignment",
  "codegen.sdk.typescript.class_definition.TSClass",
  "codegen.sdk.typescript.detached_symbols.code_block.TSCodeBlock",
  "codegen.sdk.typescript.detached_symbols.decorator.TSDecorator",
  "codegen.sdk.typescript.detached_symbols.jsx.element.JSXElement",
  "codegen.sdk.typescript.detached_symbols.jsx.expression.JSXExpression",
  "codegen.sdk.typescript.detached_symbols.jsx.prop.JSXProp",
  "codegen.sdk.typescript.detached_symbols.parameter.TSParameter",
  "codegen.sdk.typescript.enum_definition.TSEnum",
  "codegen.sdk.typescript.export.TSExport",
  "codegen.sdk.typescript.expressions.array_type.TSArrayType",
  "codegen.sdk.typescript.expressions.chained_attribute.TSChainedAttribute",
  "codegen.sdk.typescript.expressions.conditional_type.TSConditionalType",
  "codegen.sdk.typescript.expressions.expression_type.TSExpressionType",
  "codegen.sdk.typescript.expressions.function_type.TSFunctionType",
  "codegen.sdk.typescript.expressions.generic_type.TSGenericType",
  "codegen.sdk.typescript.expressions.lookup_type.TSLookupType",
  "codegen.sdk.typescript.expressions.named_type.TSNamedType",
  "codegen.sdk.typescript.expressions.object_type.TSObjectType",
  "codegen.sdk.typescript.expressions.query_type.TSQueryType",
  "codegen.sdk.typescript.expressions.readonly_type.TSReadonlyType",
  "codegen.sdk.typescript.expressions.string.TSString",
  "codegen.sdk.typescript.expressions.ternary_expression.TSTernaryExpression",
  "codegen.sdk.typescript.expressions.undefined_type.TSUndefinedType",
  "codegen.sdk.typescript.expressions.union_type.TSUnionType",
  "codegen.sdk.typescript.file.TSFile",
  "codegen.sdk.typescript.function.TSFunction",
  "codegen.sdk.typescript.import_resolution.TSImport",
  "codegen.sdk.typescript.interface.TSInterface",
  "codegen.sdk.typescript.interfaces.has_block.TSHasBlock",
  "codegen.sdk.typescript.namespace.TSNamespace",
  "codegen.sdk.typescript.placeholder.placeholder_return_type.TSReturnTypePlaceholder",
  "codegen.sdk.typescript.statements.assignment_statement.TSAssignmentStatement",
  "codegen.sdk.typescript.statements.attribute.TSAttribute",
  "codegen.sdk.typescript.statements.comment.TSCommentType",
  "codegen.sdk.typescript.statements.comment.TSComment",
  "codegen.sdk.typescript.statements.for_loop_statement.TSForLoopStatement",
  "codegen.sdk.typescript.statements.import_statement.TSImportStatement",
  "codegen.sdk.typescript.statements.labeled_statement.TSLabeledStatement",
  "codegen.sdk.typescript.statements.switch_case.TSSwitchCase",
  "codegen.sdk.typescript.statements.switch_statement.TSSwitchStatement",
  "codegen.sdk.typescript.statements.try_catch_statement.TSTryCatchStatement",
  "codegen.sdk.typescript.statements.while_statement.TSWhileStatement",
  "codegen.sdk.typescript.symbol.TSSymbol",
  "codegen.sdk.typescript.symbol_groups.comment_group.TSCommentGroup",
  "codegen.sdk.typescript.symbol_groups.dict.TSPair",
  "codegen.sdk.typescript.ts_config.TSConfig",
  "codegen.sdk.typescript.type_alias.TSTypeAlias",
]
[lint.isort]
known-first-party = ["codegen"]
