diff --git a/rest_api/api.py b/rest_api/api.py
index e853c84eb..67cf2f176 100644
--- a/rest_api/api.py
+++ b/rest_api/api.py
@@ -127,6 +127,7 @@ class RunPipeline(Resource):
     def options(self):
         return {}
 
+    @preassembly_ns.response(200)
     def post(self):
         """Run an assembly pipeline for a list of Statements.
 
@@ -292,6 +293,7 @@ for func_name, func in pipeline_functions.items():
         class NewFunction(PreassembleStatements):
             func_name = func_name
 
+            @preassembly_ns.response(200)
             def post(self):
                 return super().post()
 
@@ -320,6 +322,7 @@ class ReachProcessText(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process text with REACH and return INDRA Statements.
 
@@ -375,6 +378,7 @@ class ReachProcessJson(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process REACH json and return INDRA Statements.
 
@@ -401,6 +405,7 @@ class ReachProcessPmc(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process PubMedCentral article and return INDRA Statements.
 
@@ -463,6 +468,7 @@ class TripsProcessText(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process text with TRIPS and return INDRA Statements.
 
@@ -489,6 +495,7 @@ class TripsProcessText(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process TRIPS EKB XML and return INDRA Statements.
 
@@ -523,6 +530,7 @@ class EidosProcessText(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process text with EIDOS and return biology INDRA Statements.
 
@@ -557,6 +565,7 @@ class EidosProcessJsonld(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process an EIDOS JSON-LD and return biology INDRA Statements.
 
@@ -588,6 +597,7 @@ class BelProcessNeighborhood(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process BEL Large Corpus neighborhood and return INDRA Statements.
 
@@ -617,6 +627,7 @@ class BelProcessBelRdf(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process BEL RDF and return INDRA Statements.
 
@@ -651,6 +662,7 @@ class BiopaxPathsBetween(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """
         Process PathwayCommons paths between genes, return INDRA Statements.
@@ -679,6 +691,7 @@ class BiopaxPathsFromTo(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """
         Process PathwayCommons paths from-to genes, return INDRA Statements.
@@ -714,6 +727,7 @@ class BiopaxNeighborhood(Resource):
     def options(self):
         return {}
 
+    @sources_ns.response(200)
     def post(self):
         """Process PathwayCommons neighborhood, return INDRA Statements.
 
@@ -747,6 +761,7 @@ class AssemblePysb(Resource):
     def options(self):
         return {}
 
+    @assemblers_ns.response(200)
     def post(self):
         """Assemble INDRA Statements and return PySB model string.
 
@@ -809,6 +824,7 @@ class AssembleCx(Resource):
     def options(self):
         return {}
 
+    @assemblers_ns.response(200)
     def post(self):
         """Assemble INDRA Statements and return CX network json.
 
@@ -838,6 +854,7 @@ class AssembleGraph(Resource):
     def options(self):
         return {}
 
+    @assemblers_ns.response(200)
     def post(self):
         """Assemble INDRA Statements and return Graphviz graph dot string.
 
@@ -867,6 +884,7 @@ class AssembleCyjs(Resource):
     def options(self):
         return {}
 
+    @assemblers_ns.response(200)
     def post(self):
         """Assemble INDRA Statements and return Cytoscape JS network.
 
@@ -896,6 +914,7 @@ class AssembleEnglish(Resource):
     def options(self):
         return {}
 
+    @assemblers_ns.response(200)
     def post(self):
         """Assemble each statement into English sentence.
 
@@ -929,6 +948,7 @@ class AssembleLoopy(Resource):
     def options(self):
         return {}
 
+    @assemblers_ns.response(200)
     def post(self):
         """Assemble INDRA Statements into a Loopy model using SIF Assembler.
 
@@ -963,6 +983,7 @@ class ShareModelNdex(Resource):
     def options(self):
         return {}
 
+    @ndex_ns.response(200)
     def post(self):
         """Upload the model to NDEX.
 
@@ -994,6 +1015,7 @@ class FetchModelNdex(Resource):
     def options(self):
         return {}
 
+    @ndex_ns.response(200)
     def post(self):
         """Download model and associated pieces from NDEX.
 
@@ -1033,6 +1055,7 @@ class GetEvidence(Resource):
     def options(self):
         return {}
 
+    @indra_db_rest_ns.response(200)
     def post(self):
         """Get all evidence for a given INDRA statement.
 
@@ -1107,6 +1130,7 @@ class CbioMrna(Resource):
     def options(self):
         return {}
 
+    @databases_ns.response(200)
     def post(self):
         """Get CCLE mRNA amounts using cBioClient
 
@@ -1139,6 +1163,7 @@ class CbioCna(Resource):
     def options(self):
         return {}
 
+    @databases_ns.response(200)
     def post(self):
         """Get CCLE CNA
 
@@ -1177,6 +1202,7 @@ class CbioMutations(Resource):
     def options(self):
         return {}
 
+    @databases_ns.response(200)
     def post(self):
         """Get CCLE mutations
 
